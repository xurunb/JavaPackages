import java.util.*;
import java.io.*;

package arraystack;

public class ArrayStack<Type>  implements Stack{
    private ArrayList<Type> stack;
    private int count;
    
    public ArrayStack(){
     stack=new ArrayList<Type>();
     count=0;
    }
    public void push(Type value) {
      stack.add(value);
      count++;
        //puts the value at position count and increments count
    }
    public Type pop() throws RuntimeException{
      if(count==0){
        throw new RuntimeException("Stack is empty");
      }
      Type temp=stack.get(stack.size()-1);
      stack.remove(stack.size()-1);
      count--;
      return temp;
      
        //if count is 0 throw an exception. Otherwise decrement count and return the value count points to
    }
    public Type peek() throws RuntimeException {
      if(count==0){
        throw new RuntimeException("Stack is empty");
      }
      return stack.get(stack.size()-1);
        //return the value at position count - 1   
    }
    boolean empty() {
      return (count==0);
        //true if count is 0
    }
}